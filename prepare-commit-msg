    #!/bin/bash

    # Get the commit message file path from the first argument
    COMMIT_MSG_FILE=$1
    # Get the commit source from the second argument (e.g., message, template, merge, squash)
    COMMIT_SOURCE=$2
    # Get the commit SHA-1 from the third argument (only if -c, -C, or --amend is used)
    # COMMIT_SHA1=$3

    # Only generate the message if it's a standard commit (not merge, amend, etc.)
    # and if the message file is currently empty or contains only comments.
    # Adjust this condition if you want it to run in more cases.
    if [ -z "$COMMIT_SOURCE" ] && [ -f "$COMMIT_MSG_FILE" ] && ! grep -q '[^#[:space:]]' "$COMMIT_MSG_FILE"; then

        # Get the list of staged files
        STAGED_FILES=$(git diff --name-only --cached)

        # Get the current timestamp (adjust format as needed)
        # Example format: Thu, Apr 24, 2025 03:08 PM CST
        TIMESTAMP=$(date +"%a, %b %d, %Y %I:%M %p %Z")

        # Check if there are any staged files
        if [ -n "$STAGED_FILES" ]; then
            # Construct the commit message
            echo "Auto-commit: Staged files at $TIMESTAMP" > "$COMMIT_MSG_FILE"
            echo "" >> "$COMMIT_MSG_FILE" # Add a blank line
            echo "Files updated:" >> "$COMMIT_MSG_FILE"
            echo "$STAGED_FILES" >> "$COMMIT_MSG_FILE"
        else
            # Optional: Handle case with no staged files if needed
             echo "Auto-commit: No files staged at $TIMESTAMP" > "$COMMIT_MSG_FILE"
        fi
    fi

    # Exit successfully
    exit 0
    